{
    "openapi": "3.1.0",
    "info": {
        "title": "TWIN - Test Endpoints",
        "description": "REST API for TWIN - Test Endpoints.",
        "version": "1.0.0",
        "license": {
            "name": "Apache 2.0 License",
            "url": "https://opensource.org/licenses/Apache-2.0"
        }
    },
    "servers": [
        {
            "url": "https://localhost"
        }
    ],
    "tags": [
        {
            "name": "Attestation",
            "description": "Endpoints which are modelled to access an attestation contract."
        }
    ],
    "paths": {
        "/attestation": {
            "post": {
                "operationId": "attestationAttest",
                "summary": "Attest a data set",
                "tags": [
                    "Attestation"
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "requestBody": {
                    "description": "Attest the data and return the collated attestation details.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttestationAttestRequest"
                            },
                            "examples": {
                                "attestationAttestExample": {
                                    "value": {
                                        "verificationMethodId": "did:iota:tst:0xf0b95a98b3dbc5ce1c9ce59d70af95a97599f100a7296ecdd1eb108bebfa047f#attestation",
                                        "data": {
                                            "docName": "bill-of-lading",
                                            "mimeType": "application/pdf",
                                            "fingerprint": "0xf0b95a98b3dbc5ce1c9ce59d70af95a97599f100a7296ecdd1eb108bebfa047f"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The response when creating the attestation for some data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttestationAttestResponse"
                                },
                                "examples": {
                                    "attestationAttestResponseExample": {
                                        "value": {
                                            "information": {
                                                "id": "attestation:iota:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg==",
                                                "created": "2024-06-18T13:34:51Z",
                                                "ownerIdentity": "did:iota:tst:0x8992c426116f21b2a4c7a2854300748d3e94a8ce089d5be62e11f105bd2a0f9e",
                                                "holderIdentity": "did:iota:tst:0x8992c426116f21b2a4c7a2854300748d3e94a8ce089d5be62e11f105bd2a0f9e",
                                                "data": {
                                                    "docName": "bill-of-lading",
                                                    "mimeType": "application/pdf",
                                                    "fingerprint": "0xf0b95a98b3dbc5ce1c9ce59d70af95a97599f100a7296ecdd1eb108bebfa047f"
                                                },
                                                "proof": {
                                                    "type": "jwt",
                                                    "value": "eyJraWQiOiJkaWQ6aW90YTp0c3Q6MHg4OTkyYzQyNjExNmYyMWIyYTRjN2EyODU0MzAwNzQ4ZDNlOTRhOGNlMDg5ZDViZTYyZTExZjEwNWJkMmEwZjllI2F0dGVzdGF0aW9uIiwidHlwIjoiSldUIiwiYWxnIjoiRWREU0EifQ.eyJpc3MiOiJkaWQ6aW90YTp0c3Q6MHg4OTkyYzQyNjExNmYyMWIyYTRjN2EyODU0MzAwNzQ4ZDNlOTRhOGNlMDg5ZDViZTYyZTExZjEwNWJkMmEwZjllIiwibmJmIjoxNzE4NzE3NjkxLCJqdGkiOiJ1cm46ZXhhbXBsZToxMjM0NTY3OCIsInZjIjp7IkBjb250ZXh0IjoiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiRG9jRGVzY3JpcHRpb25UeXBlIl0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7ImRvY05hbWUiOiJiaWxsLW9mLWxhZGluZyIsImZpbmdlcnByaW50IjoiMHhmMGI5NWE5OGIzZGJjNWNlMWM5Y2U1OWQ3MGFmOTVhOTc1OTlmMTAwYTcyOTZlY2RkMWViMTA4YmViZmEwNDdmIiwibWltZVR5cGUiOiJhcHBsaWNhdGlvbi9wZGYifSwiY3JlZGVudGlhbFN0YXR1cyI6eyJpZCI6ImRpZDppb3RhOnRzdDoweDg5OTJjNDI2MTE2ZjIxYjJhNGM3YTI4NTQzMDA3NDhkM2U5NGE4Y2UwODlkNWJlNjJlMTFmMTA1YmQyYTBmOWUjcmV2b2NhdGlvbiIsInR5cGUiOiJSZXZvY2F0aW9uQml0bWFwMjAyMiIsInJldm9jYXRpb25CaXRtYXBJbmRleCI6IjAifX19.GC0EnIZgYxuUDmXcnejNb7nwsnRv1e1KW2AL0HgzYv9Ab-FTXqkgRk4agYyCDW2cJoDQXcsM1lbnKWPlw6ZBCw"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The server cannot process the request, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attestation/{id}": {
            "get": {
                "operationId": "attestationVerify",
                "summary": "Verify an attestation",
                "tags": [
                    "Attestation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The attestation id to verify.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "attestation:iota:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg=="
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response to verifying the attestation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttestationVerifyResponse"
                                },
                                "examples": {
                                    "attestationVerifyResponseExample": {
                                        "value": {
                                            "verified": true,
                                            "information": {
                                                "id": "attestation:iota:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg==",
                                                "created": "2024-06-18T13:34:51Z",
                                                "ownerIdentity": "did:iota:tst:0x8992c426116f21b2a4c7a2854300748d3e94a8ce089d5be62e11f105bd2a0f9e",
                                                "holderIdentity": "did:iota:tst:0x8992c426116f21b2a4c7a2854300748d3e94a8ce089d5be62e11f105bd2a0f9e",
                                                "data": {
                                                    "docName": "bill-of-lading",
                                                    "mimeType": "application/pdf",
                                                    "fingerprint": "0xf0b95a98b3dbc5ce1c9ce59d70af95a97599f100a7296ecdd1eb108bebfa047f"
                                                },
                                                "proof": {
                                                    "type": "jwt",
                                                    "value": "eyJraWQiOiJkaWQ6aW90YTp0c3Q6MHg4OTkyYzQyNjExNmYyMWIyYTRjN2EyODU0MzAwNzQ4ZDNlOTRhOGNlMDg5ZDViZTYyZTExZjEwNWJkMmEwZjllI2F0dGVzdGF0aW9uIiwidHlwIjoiSldUIiwiYWxnIjoiRWREU0EifQ.eyJpc3MiOiJkaWQ6aW90YTp0c3Q6MHg4OTkyYzQyNjExNmYyMWIyYTRjN2EyODU0MzAwNzQ4ZDNlOTRhOGNlMDg5ZDViZTYyZTExZjEwNWJkMmEwZjllIiwibmJmIjoxNzE4NzE3NjkxLCJqdGkiOiJ1cm46ZXhhbXBsZToxMjM0NTY3OCIsInZjIjp7IkBjb250ZXh0IjoiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiRG9jRGVzY3JpcHRpb25UeXBlIl0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7ImRvY05hbWUiOiJiaWxsLW9mLWxhZGluZyIsImZpbmdlcnByaW50IjoiMHhmMGI5NWE5OGIzZGJjNWNlMWM5Y2U1OWQ3MGFmOTVhOTc1OTlmMTAwYTcyOTZlY2RkMWViMTA4YmViZmEwNDdmIiwibWltZVR5cGUiOiJhcHBsaWNhdGlvbi9wZGYifSwiY3JlZGVudGlhbFN0YXR1cyI6eyJpZCI6ImRpZDppb3RhOnRzdDoweDg5OTJjNDI2MTE2ZjIxYjJhNGM3YTI4NTQzMDA3NDhkM2U5NGE4Y2UwODlkNWJlNjJlMTFmMTA1YmQyYTBmOWUjcmV2b2NhdGlvbiIsInR5cGUiOiJSZXZvY2F0aW9uQml0bWFwMjAyMiIsInJldm9jYXRpb25CaXRtYXBJbmRleCI6IjAifX19.GC0EnIZgYxuUDmXcnejNb7nwsnRv1e1KW2AL0HgzYv9Ab-FTXqkgRk4agYyCDW2cJoDQXcsM1lbnKWPlw6ZBCw"
                                                }
                                            }
                                        }
                                    },
                                    "attestationVerifyResponseFailExample": {
                                        "value": {
                                            "verified": false,
                                            "failure": "proofFailed",
                                            "information": {
                                                "id": "attestation:iota:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg==",
                                                "created": "2024-06-18T13:34:51Z",
                                                "ownerIdentity": "did:iota:tst:0x8992c426116f21b2a4c7a2854300748d3e94a8ce089d5be62e11f105bd2a0f9e",
                                                "holderIdentity": "did:iota:tst:0x8992c426116f21b2a4c7a2854300748d3e94a8ce089d5be62e11f105bd2a0f9e",
                                                "data": {
                                                    "docName": "bill-of-lading",
                                                    "mimeType": "application/pdf",
                                                    "fingerprint": "0xf0b95a98b3dbc5ce1c9ce59d70af95a97599f100a7296ecdd1eb108bebfa047f"
                                                },
                                                "proof": {
                                                    "type": "jwt",
                                                    "value": "eyJraWQiOiJkaWQ6aW90YTp0c3Q6MHg4OTkyYzQyNjExNmYyMWIyYTRjN2EyODU0MzAwNzQ4ZDNlOTRhOGNlMDg5ZDViZTYyZTExZjEwNWJkMmEwZjllI2F0dGVzdGF0aW9uIiwidHlwIjoiSldUIiwiYWxnIjoiRWREU0EifQ.eyJpc3MiOiJkaWQ6aW90YTp0c3Q6MHg4OTkyYzQyNjExNmYyMWIyYTRjN2EyODU0MzAwNzQ4ZDNlOTRhOGNlMDg5ZDViZTYyZTExZjEwNWJkMmEwZjllIiwibmJmIjoxNzE4NzE3NjkxLCJqdGkiOiJ1cm46ZXhhbXBsZToxMjM0NTY3OCIsInZjIjp7IkBjb250ZXh0IjoiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiRG9jRGVzY3JpcHRpb25UeXBlIl0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7ImRvY05hbWUiOiJiaWxsLW9mLWxhZGluZyIsImZpbmdlcnByaW50IjoiMHhmMGI5NWE5OGIzZGJjNWNlMWM5Y2U1OWQ3MGFmOTVhOTc1OTlmMTAwYTcyOTZlY2RkMWViMTA4YmViZmEwNDdmIiwibWltZVR5cGUiOiJhcHBsaWNhdGlvbi9wZGYifSwiY3JlZGVudGlhbFN0YXR1cyI6eyJpZCI6ImRpZDppb3RhOnRzdDoweDg5OTJjNDI2MTE2ZjIxYjJhNGM3YTI4NTQzMDA3NDhkM2U5NGE4Y2UwODlkNWJlNjJlMTFmMTA1YmQyYTBmOWUjcmV2b2NhdGlvbiIsInR5cGUiOiJSZXZvY2F0aW9uQml0bWFwMjAyMiIsInJldm9jYXRpb25CaXRtYXBJbmRleCI6IjAifX19.GC0EnIZgYxuUDmXcnejNb7nwsnRv1e1KW2AL0HgzYv9Ab-FTXqkgRk4agYyCDW2cJoDQXcsM1lbnKWPlw6ZBCw"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The server cannot process the request, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "attestationDestroy",
                "summary": "Destroy an attestation",
                "tags": [
                    "Attestation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The attestation id to destroy.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "attestation:iota:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg=="
                    }
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The rest request ended in success with no data."
                    },
                    "400": {
                        "description": "The server cannot process the request, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attestation/{id}/transfer": {
            "put": {
                "operationId": "attestationTransfer",
                "summary": "Transfer an attestation",
                "tags": [
                    "Attestation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The attestation id to verify.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "attestation:iota:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg=="
                    }
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "requestBody": {
                    "description": "Transfer the attestation to a new holder.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttestationTransferRequest"
                            },
                            "examples": {
                                "attestationTransferRequestExample": {
                                    "value": {
                                        "holderIdentity": "did:iota:tst:0x06ae1034f9f4af1b408a0b54e877bb476259666a14f221400d3746aecefa7105"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The response to transferring the attestation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttestationTransferResponse"
                                },
                                "examples": {
                                    "attestationTransferResponseExample": {
                                        "value": {
                                            "information": {
                                                "id": "attestation:iota:aW90YS1uZnQ6dHN0OjB4NzYyYjljNDllYTg2OWUwZWJkYTliYmZhNzY5Mzk0NDdhNDI4ZGNmMTc4YzVkMTVhYjQ0N2UyZDRmYmJiNGViMg==",
                                                "created": "2024-06-18T13:34:51Z",
                                                "ownerIdentity": "did:iota:tst:0x8992c426116f21b2a4c7a2854300748d3e94a8ce089d5be62e11f105bd2a0f9e",
                                                "holderIdentity": "did:iota:tst:0x06ae1034f9f4af1b408a0b54e877bb476259666a14f221400d3746aecefa7105",
                                                "transferred": "2024-06-18T13:35:45.642Z",
                                                "data": {
                                                    "docName": "bill-of-lading",
                                                    "fingerprint": "0xf0b95a98b3dbc5ce1c9ce59d70af95a97599f100a7296ecdd1eb108bebfa047f",
                                                    "mimeType": "application/pdf"
                                                },
                                                "proof": {
                                                    "type": "jwt",
                                                    "value": "eyJraWQiOiJkaWQ6aW90YTp0c3Q6MHg4OTkyYzQyNjExNmYyMWIyYTRjN2EyODU0MzAwNzQ4ZDNlOTRhOGNlMDg5ZDViZTYyZTExZjEwNWJkMmEwZjllI2F0dGVzdGF0aW9uIiwidHlwIjoiSldUIiwiYWxnIjoiRWREU0EifQ.eyJpc3MiOiJkaWQ6aW90YTp0c3Q6MHg4OTkyYzQyNjExNmYyMWIyYTRjN2EyODU0MzAwNzQ4ZDNlOTRhOGNlMDg5ZDViZTYyZTExZjEwNWJkMmEwZjllIiwibmJmIjoxNzE4NzE3NjkxLCJqdGkiOiJ1cm46ZXhhbXBsZToxMjM0NTY3OCIsInZjIjp7IkBjb250ZXh0IjoiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiRG9jRGVzY3JpcHRpb25UeXBlIl0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7ImRvY05hbWUiOiJiaWxsLW9mLWxhZGluZyIsImZpbmdlcnByaW50IjoiMHhmMGI5NWE5OGIzZGJjNWNlMWM5Y2U1OWQ3MGFmOTVhOTc1OTlmMTAwYTcyOTZlY2RkMWViMTA4YmViZmEwNDdmIiwibWltZVR5cGUiOiJhcHBsaWNhdGlvbi9wZGYifSwiY3JlZGVudGlhbFN0YXR1cyI6eyJpZCI6ImRpZDppb3RhOnRzdDoweDg5OTJjNDI2MTE2ZjIxYjJhNGM3YTI4NTQzMDA3NDhkM2U5NGE4Y2UwODlkNWJlNjJlMTFmMTA1YmQyYTBmOWUjcmV2b2NhdGlvbiIsInR5cGUiOiJSZXZvY2F0aW9uQml0bWFwMjAyMiIsInJldm9jYXRpb25CaXRtYXBJbmRleCI6IjAifX19.GC0EnIZgYxuUDmXcnejNb7nwsnRv1e1KW2AL0HgzYv9Ab-FTXqkgRk4agYyCDW2cJoDQXcsM1lbnKWPlw6ZBCw"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The server cannot process the request, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AttestationAttestRequest": {
                "type": "object",
                "properties": {
                    "verificationMethodId": {
                        "type": "string",
                        "description": "The identity verification method to use for attesting the data."
                    },
                    "data": {
                        "$ref": "#/components/schemas/JsonLdNodeObject"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the connector to use for the attestation, defaults to component configured namespace."
                    }
                },
                "required": [
                    "verificationMethodId",
                    "data"
                ],
                "additionalProperties": false,
                "description": "The data to be used in the signing."
            },
            "AttestationAttestResponse": {
                "type": "object",
                "properties": {
                    "information": {
                        "$ref": "#/components/schemas/AttestationInformation"
                    }
                },
                "required": [
                    "information"
                ],
                "additionalProperties": false,
                "description": "The result of the attestation process."
            },
            "AttestationInformation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of the attestation."
                    },
                    "created": {
                        "type": "string",
                        "description": "Created date/time of the attestation in ISO format."
                    },
                    "ownerIdentity": {
                        "type": "string",
                        "description": "The identity of the owner."
                    },
                    "transferred": {
                        "type": "string",
                        "description": "Transferred date/time of the attestation in ISO format, can be blank if holder identity is owner."
                    },
                    "holderIdentity": {
                        "type": "string",
                        "description": "The identity of the current holder, can be undefined if owner is still the holder."
                    },
                    "data": {
                        "$ref": "#/components/schemas/JsonLdNodeObject"
                    },
                    "proof": {
                        "$ref": "#/components/schemas/AttestationProof"
                    }
                },
                "additionalProperties": false
            },
            "AttestationProof": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of the proof."
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the proof."
                    }
                },
                "required": [
                    "type",
                    "value"
                ],
                "additionalProperties": false,
                "description": "Interface describing an attestation proof."
            },
            "AttestationTransferRequest": {
                "type": "object",
                "properties": {
                    "holderIdentity": {
                        "type": "string",
                        "description": "The new holder identity."
                    }
                },
                "required": [
                    "holderIdentity"
                ],
                "additionalProperties": false,
                "description": "The parameters to be used in the transfer."
            },
            "AttestationTransferResponse": {
                "type": "object",
                "properties": {
                    "information": {
                        "$ref": "#/components/schemas/AttestationInformation"
                    }
                },
                "required": [
                    "information"
                ],
                "additionalProperties": false,
                "description": "The data returned from the transfer response."
            },
            "AttestationVerifyResponse": {
                "type": "object",
                "properties": {
                    "verified": {
                        "type": "boolean",
                        "description": "Whether the attestation is verified."
                    },
                    "failure": {
                        "type": "string",
                        "description": "The failure message if the attestation is not verified."
                    },
                    "information": {
                        "$ref": "#/components/schemas/AttestationInformation"
                    }
                },
                "required": [
                    "verified"
                ],
                "additionalProperties": false,
                "description": "The data returned from the verification response."
            },
            "Error": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for the error."
                    },
                    "message": {
                        "type": "string",
                        "description": "The message for the error."
                    },
                    "source": {
                        "type": "string",
                        "description": "The source of the error."
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Any additional information for the error."
                    },
                    "stack": {
                        "type": "string",
                        "description": "The stack trace for the error."
                    },
                    "inner": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "required": [
                    "name",
                    "message"
                ],
                "additionalProperties": false,
                "description": "Model to describe serialized error."
            },
            "JsonLdContainerType": {
                "type": "string",
                "enum": [
                    "@language",
                    "@index",
                    "@id",
                    "@graph",
                    "@type"
                ]
            },
            "JsonLdContainerTypeArray": {
                "anyOf": [
                    {
                        "type": "array",
                        "minItems": 2,
                        "items": [
                            {
                                "type": "string",
                                "const": "@graph"
                            },
                            {
                                "type": "string",
                                "const": "@id"
                            }
                        ],
                        "maxItems": 2
                    },
                    {
                        "type": "array",
                        "minItems": 2,
                        "items": [
                            {
                                "type": "string",
                                "const": "@id"
                            },
                            {
                                "type": "string",
                                "const": "@graph"
                            }
                        ],
                        "maxItems": 2
                    },
                    {
                        "type": "array",
                        "minItems": 3,
                        "items": [
                            {
                                "type": "string",
                                "const": "@set"
                            },
                            {
                                "type": "string",
                                "const": "@graph"
                            },
                            {
                                "type": "string",
                                "const": "@id"
                            }
                        ],
                        "maxItems": 3
                    },
                    {
                        "type": "array",
                        "minItems": 3,
                        "items": [
                            {
                                "type": "string",
                                "const": "@set"
                            },
                            {
                                "type": "string",
                                "const": "@id"
                            },
                            {
                                "type": "string",
                                "const": "@graph"
                            }
                        ],
                        "maxItems": 3
                    },
                    {
                        "type": "array",
                        "minItems": 3,
                        "items": [
                            {
                                "type": "string",
                                "const": "@graph"
                            },
                            {
                                "type": "string",
                                "const": "@set"
                            },
                            {
                                "type": "string",
                                "const": "@id"
                            }
                        ],
                        "maxItems": 3
                    },
                    {
                        "type": "array",
                        "minItems": 3,
                        "items": [
                            {
                                "type": "string",
                                "const": "@id"
                            },
                            {
                                "type": "string",
                                "const": "@set"
                            },
                            {
                                "type": "string",
                                "const": "@graph"
                            }
                        ],
                        "maxItems": 3
                    },
                    {
                        "type": "array",
                        "minItems": 3,
                        "items": [
                            {
                                "type": "string",
                                "const": "@graph"
                            },
                            {
                                "type": "string",
                                "const": "@id"
                            },
                            {
                                "type": "string",
                                "const": "@set"
                            }
                        ],
                        "maxItems": 3
                    },
                    {
                        "type": "array",
                        "minItems": 3,
                        "items": [
                            {
                                "type": "string",
                                "const": "@id"
                            },
                            {
                                "type": "string",
                                "const": "@graph"
                            },
                            {
                                "type": "string",
                                "const": "@set"
                            }
                        ],
                        "maxItems": 3
                    },
                    {
                        "type": "array",
                        "minItems": 2,
                        "items": [
                            {
                                "type": "string",
                                "const": "@set"
                            },
                            {
                                "$ref": "#/components/schemas/JsonLdContainerType"
                            }
                        ],
                        "maxItems": 2
                    },
                    {
                        "type": "array",
                        "minItems": 2,
                        "items": [
                            {
                                "$ref": "#/components/schemas/JsonLdContainerType"
                            },
                            {
                                "type": "string",
                                "const": "@set"
                            }
                        ],
                        "maxItems": 2
                    }
                ]
            },
            "JsonLdContextDefinition": {
                "type": "object",
                "properties": {
                    "@base": {
                        "$ref": "#/components/schemas/JsonLdKeyword"
                    },
                    "@direction": {
                        "$ref": "#/components/schemas/JsonLdKeyword"
                    },
                    "@import": {
                        "$ref": "#/components/schemas/JsonLdKeyword"
                    },
                    "@language": {
                        "$ref": "#/components/schemas/JsonLdKeyword"
                    },
                    "@propagate": {
                        "$ref": "#/components/schemas/JsonLdKeyword"
                    },
                    "@protected": {
                        "$ref": "#/components/schemas/JsonLdKeyword"
                    },
                    "@type": {
                        "type": "object",
                        "properties": {
                            "@container": {
                                "type": "string",
                                "const": "@set"
                            },
                            "@protected": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            }
                        },
                        "required": [
                            "@container"
                        ],
                        "additionalProperties": false
                    },
                    "@version": {
                        "$ref": "#/components/schemas/JsonLdKeyword"
                    },
                    "@vocab": {
                        "$ref": "#/components/schemas/JsonLdKeyword"
                    }
                },
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "null"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/components/schemas/JsonLdExpandedTermDefinition"
                        }
                    ]
                },
                "description": "A context definition defines a local context in a node object."
            },
            "JsonLdContextDefinitionElement": {
                "anyOf": [
                    {
                        "type": "null"
                    },
                    {
                        "type": "string"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdContextDefinition"
                    }
                ],
                "description": "A context definition element is used to define the types of a context definition."
            },
            "JsonLdContextDefinitionRoot": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/JsonLdContextDefinitionElement"
                    },
                    {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonLdContextDefinitionElement"
                        }
                    }
                ],
                "description": "A context definition root is used to define the root of a context definition."
            },
            "JsonLdExpandedTermDefinition": {
                "anyOf": [
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "@id": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/JsonLdKeyword"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "@nest": {
                                "type": "string"
                            },
                            "@container": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@type": {
                                "type": "string"
                            },
                            "@language": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@index": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@context": {
                                "$ref": "#/components/schemas/JsonLdContextDefinition"
                            },
                            "@prefix": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@propagate": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@protected": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "@reverse": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@container": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "@set",
                                    "@index",
                                    null
                                ]
                            },
                            "@type": {
                                "type": "string"
                            },
                            "@language": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@index": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@context": {
                                "$ref": "#/components/schemas/JsonLdContextDefinition"
                            },
                            "@prefix": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@propagate": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@protected": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            }
                        },
                        "required": [
                            "@reverse"
                        ]
                    }
                ],
                "description": "An expanded term definition is used to describe the mapping between a term and its expanded identifier, as well as other properties of the value associated with the term when it is used as key in a node object."
            },
            "JsonLdGraphObject": {
                "type": "object",
                "properties": {
                    "@graph": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonLdNodeObject"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/JsonLdNodeObject"
                                }
                            }
                        ]
                    },
                    "@index": {
                        "type": "string"
                    },
                    "@id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    },
                    "@context": {
                        "$ref": "#/components/schemas/JsonLdContextDefinitionRoot"
                    }
                },
                "required": [
                    "@graph"
                ],
                "additionalProperties": false,
                "description": "A graph object represents a named graph, which MAY include an explicit graph name."
            },
            "JsonLdIdMap": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/JsonLdNodeObject"
                },
                "description": "An id map is used to associate an IRI with a value that allows easy programmatic access."
            },
            "JsonLdIncludedBlock": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/JsonLdNodeObject"
                    },
                    {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonLdNodeObject"
                        }
                    }
                ],
                "description": "An included block is used to provide a set of node objects."
            },
            "JsonLdIndexMap": {
                "type": "object",
                "additionalProperties": {
                    "anyOf": [
                        {
                            "$ref": "#/components/schemas/JsonLdIndexMapItem"
                        },
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/JsonLdIndexMapItem"
                            }
                        }
                    ]
                },
                "description": "An index map allows keys that have no semantic meaning, but should be preserved regardless, to be used in JSON-LD documents."
            },
            "JsonLdIndexMapItem": {
                "anyOf": [
                    {
                        "type": "null"
                    },
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdNodeObject"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdValueObject"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdListObject"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdSetObject"
                    }
                ],
                "description": "The items that can be stored in an index map."
            },
            "JsonLdJsonArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/JsonLdJsonValue"
                }
            },
            "JsonLdJsonObject": {
                "type": "object",
                "additionalProperties": {
                    "anyOf": [
                        {
                            "$ref": "#/components/schemas/JsonLdJsonValue"
                        },
                        {
                            "not": {}
                        }
                    ]
                }
            },
            "JsonLdJsonPrimitive": {
                "type": [
                    "string",
                    "number",
                    "boolean",
                    "null"
                ]
            },
            "JsonLdJsonValue": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/JsonLdJsonPrimitive"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdJsonArray"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdJsonObject"
                    }
                ]
            },
            "JsonLdKeyword": {
                "type": "object",
                "properties": {
                    "@base": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "@container": {
                        "anyOf": [
                            {
                                "type": "string",
                                "const": "@list"
                            },
                            {
                                "type": "string",
                                "const": "@set"
                            },
                            {
                                "$ref": "#/components/schemas/JsonLdContainerType"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "const": "@list"
                                        },
                                        {
                                            "type": "string",
                                            "const": "@set"
                                        },
                                        {
                                            "$ref": "#/components/schemas/JsonLdContainerType"
                                        }
                                    ]
                                }
                            },
                            {
                                "$ref": "#/components/schemas/JsonLdContainerTypeArray"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "@context": {
                        "$ref": "#/components/schemas/JsonLdContextDefinitionRoot"
                    },
                    "@direction": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "ltr",
                            "rtl",
                            null
                        ]
                    },
                    "@graph": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonLdValueObject"
                            },
                            {
                                "$ref": "#/components/schemas/JsonLdNodeObject"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/JsonLdValueObject"
                                        },
                                        {
                                            "$ref": "#/components/schemas/JsonLdNodeObject"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "@id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    },
                    "@import": {
                        "type": "string"
                    },
                    "@included": {
                        "$ref": "#/components/schemas/JsonLdIncludedBlock"
                    },
                    "@index": {
                        "type": "string"
                    },
                    "@json": {
                        "type": "string",
                        "const": "@json"
                    },
                    "@language": {
                        "type": "string"
                    },
                    "@list": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonLdListOrSetItem"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/JsonLdListOrSetItem"
                                }
                            }
                        ]
                    },
                    "@nest": {
                        "type": "object"
                    },
                    "@none": {
                        "type": "string",
                        "const": "@none"
                    },
                    "@prefix": {
                        "type": "boolean"
                    },
                    "@propagate": {
                        "type": "boolean"
                    },
                    "@protected": {
                        "type": "boolean"
                    },
                    "@reverse": {
                        "type": "string"
                    },
                    "@set": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonLdListOrSetItem"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/JsonLdListOrSetItem"
                                }
                            }
                        ]
                    },
                    "@type": {
                        "type": "string"
                    },
                    "@value": {
                        "type": [
                            "null",
                            "boolean",
                            "number",
                            "string"
                        ]
                    },
                    "@version": {
                        "type": "string",
                        "const": "1.1"
                    },
                    "@vocab": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "@base",
                    "@container",
                    "@context",
                    "@direction",
                    "@graph",
                    "@id",
                    "@import",
                    "@included",
                    "@index",
                    "@json",
                    "@language",
                    "@list",
                    "@nest",
                    "@none",
                    "@prefix",
                    "@propagate",
                    "@protected",
                    "@reverse",
                    "@set",
                    "@type",
                    "@value",
                    "@version",
                    "@vocab"
                ],
                "additionalProperties": false,
                "description": "A list of keywords and their types. Only used for internal reference; not an actual interface. Not for export."
            },
            "JsonLdLanguageMap": {
                "type": "object",
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "null"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    ]
                },
                "description": "A language map is used to associate a language with a value in a way that allows easy programmatic access."
            },
            "JsonLdListObject": {
                "type": "object",
                "properties": {
                    "@list": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonLdListOrSetItem"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/JsonLdListOrSetItem"
                                }
                            }
                        ]
                    },
                    "@index": {
                        "type": "string"
                    }
                },
                "required": [
                    "@list"
                ],
                "additionalProperties": false,
                "description": "A list represents an ordered set of values."
            },
            "JsonLdListOrSetItem": {
                "anyOf": [
                    {
                        "type": "null"
                    },
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdNodeObject"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdValueObject"
                    }
                ],
                "description": "A list or set item can be a null, boolean, number, string, node object, or value object."
            },
            "JsonLdNodeObject": {
                "type": "object",
                "properties": {
                    "@context": {
                        "$ref": "#/components/schemas/JsonLdContextDefinitionRoot"
                    },
                    "@id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    },
                    "@included": {
                        "$ref": "#/components/schemas/JsonLdIncludedBlock"
                    },
                    "@graph": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonLdNodeObject"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/JsonLdNodeObject"
                                }
                            }
                        ]
                    },
                    "@nest": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonLdJsonObject"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/JsonLdJsonObject"
                                }
                            }
                        ]
                    },
                    "@type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    },
                    "@reverse": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "@index": {
                        "type": "string"
                    }
                },
                "additionalProperties": {
                    "anyOf": [
                        {
                            "$ref": "#/components/schemas/JsonLdNodePrimitive"
                        },
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/JsonLdNodePrimitive"
                            }
                        },
                        {
                            "$ref": "#/components/schemas/JsonLdLanguageMap"
                        },
                        {
                            "$ref": "#/components/schemas/JsonLdIndexMap"
                        },
                        {
                            "$ref": "#/components/schemas/JsonLdIncludedBlock"
                        },
                        {
                            "$ref": "#/components/schemas/JsonLdIdMap"
                        },
                        {
                            "$ref": "#/components/schemas/JsonLdTypeMap"
                        }
                    ]
                },
                "description": "A node object represents zero or more properties of a node in the graph serialized by the JSON-LD document."
            },
            "JsonLdNodePrimitive": {
                "anyOf": [
                    {
                        "type": "null"
                    },
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdNodeObject"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdGraphObject"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdValueObject"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdListObject"
                    },
                    {
                        "$ref": "#/components/schemas/JsonLdSetObject"
                    }
                ],
                "description": "A node primitive is a JSON-LD value which is not one of the defined NodeObject properties."
            },
            "JsonLdSetObject": {
                "type": "object",
                "properties": {
                    "@set": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonLdListOrSetItem"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/JsonLdListOrSetItem"
                                }
                            }
                        ]
                    },
                    "@index": {
                        "type": "string"
                    }
                },
                "required": [
                    "@set"
                ],
                "additionalProperties": false,
                "description": "A set represents an unordered set of values."
            },
            "JsonLdTypeMap": {
                "type": "object",
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/components/schemas/JsonLdNodeObject"
                        }
                    ]
                },
                "description": "A type map is used to associate an IRI with a value that allows easy programmatic access."
            },
            "JsonLdValueObject": {
                "anyOf": [
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "@value": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@language": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@direction": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@index": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@context": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            }
                        },
                        "required": [
                            "@value"
                        ]
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "@value": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@type": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@index": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@context": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            }
                        },
                        "required": [
                            "@type",
                            "@value"
                        ]
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "@value": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/JsonLdKeyword"
                                    },
                                    {
                                        "$ref": "#/components/schemas/JsonLdJsonObject"
                                    },
                                    {
                                        "$ref": "#/components/schemas/JsonLdJsonArray"
                                    }
                                ]
                            },
                            "@type": {
                                "type": "string",
                                "const": "@json"
                            },
                            "@index": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            },
                            "@context": {
                                "$ref": "#/components/schemas/JsonLdKeyword"
                            }
                        },
                        "required": [
                            "@type",
                            "@value"
                        ]
                    }
                ],
                "description": "A value object is used to explicitly associate a type or a language with a value to create a typed value or a language-tagged string and possibly associate a base direction."
            }
        },
        "securitySchemes": {
            "jwtBearerAuthScheme": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}